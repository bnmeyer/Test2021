/* THIS SCRIPT PERMANENTLY DELETES SUBMITTED 
IDEAS & MESSAGES */
/* Tables to be deleted after their use has been eliminated:
idea1 - needed only until the original input form is deleted.
message - replaced by inmsg and outmessage. Needed only until Ramis message system
	is converted to these new message names.
messagesubj - replaced by inmsgsubj. Needed only until Ramis message system
	is converted to these new message names.
subjectcodeemails - replaced by inmsgsubjemailaddr.  Needed only until Ramis
	message system is converted to these new message names.
*/
Drop table if exists pagetext;

Drop table if exists projectinfo;
Create table projectinfo (
	ProjName1	varchar(15)	not null,
	ProjName2	varchar(10)	not null,
	ProjName3	varchar(10)	not null,
	ProjAddr1	varchar(38)	not null,
	ProjAddr2	varchar(20)	not null,
	TelephoneNr	varchar(12)	not null,
        EmailAddr	varchar(30)	not null,
	LeadPixInscr1	varchar(10)	not null,
	LeadPixInscr2	varchar(10)	not null,
	LeadPixInscr3	varchar(10)	not null,
	CopyrightMsg1	varchar(10)	not null,
	CopyrightMsg2	varchar(25)	not null
	);

/* These are history tables!  THEY should not BE DELETED except through a custom
process that saves the history!!

Note:  comment out the following deletes & inserts as soon as we have test data we want to 
save in either the Messages or MyIdea table. */

Drop table if exists ideatemp;
Drop table if exists useridea;
Drop table if exists userideatemp;
Drop table if exists userideafinal;
Drop table if exists idea1;
drop table if exists ideafinal;
Drop table if exists idea;
/* Hist & temp tables to create:
ideahist w 'savedtime' as part of the pk.
ideatemp w no 'not null' constraints except in the pk.
ideafinalhist w 'savedtime' as part of the pk.
userhist w 'savedtime' as part of the pk. */

drop table if exists inmsgsubjemailaddr;
drop table if exists subjectcodeemails;
drop table if exists inmsg;
drop table if exists outmsgque;
drop table if exists inmsgsubj;
drop table if exists stdoutmsgpara;
drop table if exists stdoutmsg;
drop table if exists outemail;
drop table if exists stdoutmsghist;

drop table if exists message;
drop table if exists messagesubj;

create table inmsgsubj (
	insubjectcode	char(10)	not null,
	menusequence	int,
	shortdesc	char(20)	not null,
	active		tinyint 	default 1	not null,
	subjectdesc	char(40)	not null,
	fromname	char(29),
	fromemailaddress	varchar(60),
	primary key (insubjectcode)
	);
create table inmsg (
	msgdate		timestamp	not null default current_timestamp,
	insubjectcode	char(10)	not null,
	username	char(29),
	useremail	varchar(60),
	interestlevel	int,
	inmsg		varchar(480)	not null,
	primary key (msgdate),
	foreign key (insubjectcode)	references	inmsgsubj(insubjectcode)
	);
/* The next two message tables are the OLD ones.  They should be deleted once Ramis'
    message system is updated or deleted.  */
create table messagesubj (
	subjectcode	char(10)	not null,
	menusequence	int,
	shortdesc	char(20)	not null,
	active		tinyint 	default 1	not null,
	subjectdesc	char(40)	not null,
	primary key (subjectcode)
	);
create table message (
	msgdate		timestamp	not null default current_timestamp,
	subjectcode	char(10)	not null,
	visname		char(29),
	visemail	varchar(50),
	interestlevel	int,
	message		varchar(480)	not null,
	primary key (msgdate),
	foreign key (subjectcode)	references	messagesubj(subjectcode)
	);

create table inmsgsubjemailaddr (
	insubjectcode	char(10)	not null,
	destemail	varchar(60)	not null,
	primary key (insubjectcode, destemail),
	foreign key (insubjectcode)	references 	inmsgsubj(insubjectcode)
	);
create table subjectcodeemails (
	insubjectcode	char(10)	not null,
	destemail	varchar(60)	not null,
	primary key (insubjectcode, destemail),
	foreign key (insubjectcode)	references 	inmsgsubj(insubjectcode)
	);
create table stdoutmsg (
	stdoutmsgnr	int		not null,
	stdoutmsgdesc	varchar(40)	not null,
	primary key	(stdoutmsgnr)
	);
create table outmsgque (
	msgdate		timestamp	not null default current_timestamp,
	stdmsgnr	int,
	messagesubj	varchar(150),
	sendemailnr	int,
	fromname	char(29),
	fromemailaddress	varchar(60),
	destuseremail	varchar(60),
	destusername	char(29),
	outmessage	varchar(900)	not null,
	primary key 	(msgdate),
	foreign key 	(stdmsgnr)	references	stdoutmsg(stdoutmsgnr)
	);
create table outemail (
	stdmsgnr	int		not null,
	primary key	(stdmsgnr)
	);
create table stdoutmsgpara (
	stdoutmsgnr	int		not null,
	outparanr	int		not null,
	outpara		varchar(480)	not null,
	primary key	(stdoutmsgnr, outparanr),
	foreign key	(stdoutmsgnr)	references	stdoutmsg(stdoutmsgnr)
	);
create table stdoutmsghist (
	outmsgdate	timestamp	not null default current_timestamp,
	insertmsgdate	timestamp	not null default current_timestamp,
	stdmsgnr	int		not null,
	messagesubj	varchar(150),
	senduseremail	varchar(60),
	sendusername	char(29),
	destuseremail	varchar(60),
	destusername	char(29),
	primary key (outmsgdate)
	);

Drop table if exists projrole;
Drop table if exists userrole;
Drop table if exists userproj;
Drop table if exists ideafirst;
Drop table if exists user;
Drop table if exists role;
create table role(
	rolecode	varchar(10)	not null,
	roleshortdesc	varchar(15) 	not null,
	roledesc	varchar(35)	not null,
	entrypagename	varchar(35)	not null,
	primary key	(rolecode)
	);
create table user (
	emailaddress	varchar(50)	not null,
	password	varchar(22),
	lastaccess	timestamp	default 0	not null,
	lastlogin	timestamp	not null,
	preferredname	varchar(16),
	title		char(3)		not null,
	firstname	varchar(14)	not null,
	mi		char(1),
	lastname	varchar(16)	not null,
	namesuffix	char(3),
	orgname		varchar(40)	not null,
	position	varchar(35)	not null,
	tele		bigint		not null,
	addr1		varchar(30)	not null,
	addr2		varchar(30),
	city		varchar(20)	not null,
	state		char(2)		not null,
	zip		varchar(5)	not null,
	primary key (emailaddress)
	);

Drop table if exists ideastatus;
Create table ideastatus (
	ideastatuscode		char(3)		not null,
	ideastatusnr		int		not null,
	idea_open_locked_done	int	 default 1	not null,	
	ideafinal_open_locked_done	int default 1	not null,	
	ideastatusname		char(14)	not null,
	ideastatusdesc		char(75)	not null,
	primary key (ideastatuscode)
	);

/* This is the OLD Idea table - to be deleted when the old Form is deleted */
Create table idea1 (
	ideanum		int		not null auto_increment,
	projname	varchar(35)	not null,
	reqamount	decimal(8,2)	not null,
	newprojnum	int,
	orgname		varchar(40)	not null,
	orgwebaddr	varchar(700)	not null,
	schoolname	varchar(35),
	schoolwebaddr	varchar(700),
	pititle		char(3)		not null,
	picv		varchar(50),
	pifirstname	varchar(14)	not null,
	pimi		char(1),
	pilastname	varchar(14)	not null,
	pisuffix	char(3),
	piemail		varchar(700)	not null,
	pitele		bigint		not null,
	piaddr1		varchar(30)	not null,
	piaddr2		varchar(30),
	picity		varchar(20)	not null,
	pistate		char(2)		not null,
	pizip		varchar(5)	not null,
	othertitle		char(3),
	otherfirstname		varchar(14),
	othermi			char(1),
	otherlastname		varchar(14),
	othersuffix		char(3),
	otheremail		varchar(700),
	othertele		bigint,
	otheraddr1		varchar(30),
	otheraddr2		varchar(30),
	othercity		varchar(20),
	otherstate		char(2),
	otherzip		varchar(5),
	ideastatuscode		char(3),
	irsletter_TF		tinyint(1) default 0	not null,
	budget_TF		tinyint(1) default 0	not null,
	confirmsent_TF		tinyint(1) default 0	not null,
	projnum			int,
	goal		varchar(360)	not null,
	description	varchar(2400)	not null,
	aboutpeople	varchar(1500),
	relevance	varchar(2400)	not null,
	dissemination	varchar(900)	not null,
	projother	varchar(900),
	primary key (ideanum),
	Foreign key (ideastatuscode)	references	ideastatus(ideastatuscode)
	);
alter table idea1 auto_increment = 101;
commit;
/* This is the table that assigns all ideanum when an Idea is first created
Note: this table cannot have a foreign key of <emailaddress> because the user that
creates the idea could be deleted by, for example, a PI. */
Create table ideafirst (
	ideanum		int		not null auto_increment,
	emailaddress	varchar(50)	not null,
	primary key 	(ideanum)
	);
alter table ideafirst auto_increment = 101;
Create table idea (
	ideanum		int		not null,
	projname	varchar(35)	not null,
	reqamount	decimal(8,2)	not null,
	newprojnum	int,
	orgname		varchar(40)	not null,
	orgwebaddr	varchar(700)	not null,
	schoolname	varchar(35),
	schoolwebaddr	varchar(700),
	ideastatuscode		char(3),
	irsletter_TF		tinyint(1) default 0	not null,
	lastaccess		timestamp  default 0	not null,
	ST_start_time		timestamp  default 0	not null,
	UP_update_time		timestamp  default 0	not null,
	S1_initsub_time		timestamp  default 0	not null,
	E1_InitRcptConf_time	timestamp  default 0	not null,
	PD_PresDec_time		timestamp  default 0	not null,
	PD1_PresDecDone_time	timestamp  default 0	not null,
	PA_PresAccpt_time	timestamp  default 0	not null,
	GDa_GrantDec1_time	timestamp  default 0	not null,
	GD2_GrantDec1Done_time	timestamp  default 0	not null,
	GA1_GrantAccpt_time	timestamp  default 0	not null,
	E2_FinalistConfSent_time	timestamp  default 0	not null,
	S2_FinalSub_time	timestamp  default 0	not null,
	E3_FinalRcptConf_time	timestamp  default 0	not null,
	GDb_GrantDec2_time	timestamp  default 0	not null,
	GD3_GrantDec2Done_time	timestamp  default 0	not null,
	GA2_GrantAccpt2_time	timestamp  default 0	not null,
	BD_BoardDec_time	timestamp  default 0	not null,
	BD4_BoardDecDone_time	timestamp  default 0	not null,
	BA_BoardAccpt_time	timestamp  default 0	not null,
	projnum			int,
	goal		varchar(360)	not null,
	description	varchar(2400)	not null,
	aboutpeople	varchar(1500),
	relevance	varchar(2400)	not null,
	dissemination	varchar(900)	not null,
	projother	varchar(900),
	primary key (ideanum),
	foreign key (ideanum)		references	ideafirst(ideanum)  ON DELETE CASCADE,
	foreign key (ideastatuscode)	references	ideastatus(ideastatuscode)
	);
Create table ideatemp (
	ideanum		int		not null,
	projname	varchar(35),
	reqamount	decimal(8,2),
	orgname		varchar(40),
	orgwebaddr	varchar(700),
	schoolname	varchar(35),
	schoolwebaddr	varchar(700),
	ideastatuscode	char(3),
	irsletter_TF		tinyint(1) default 0	not null,
	lastaccess		timestamp  default 0	not null,
	ST_start_time		timestamp  default 0	not null,
	projnum			int,
	goal		varchar(360),
	description	varchar(2400),
	aboutpeople	varchar(1500),
	relevance	varchar(2400),
	dissemination	varchar(900),
	projother	varchar(900),
	primary key (ideanum),
	foreign key (ideanum)		references	ideafirst(ideanum)  ON DELETE CASCADE,
	foreign key (ideastatuscode)	references	ideastatus(ideastatuscode)
	);
create table ideafinal (
	ideanum		int		not null,
	myidea		varchar(3000)	not null,
	importance	varchar(1500)	not null,
	theoryofchange	varchar(1800)	not null,
	outcomealign	varchar(2100)	not null,
	researchplan	varchar(2400)	not null,
	partnership	text(2100),
	lack		text(1800)	not null,
	implement	text(1800),
	outcomedetail	varchar(2100)	not null,
	impact		varchar(1500)	not null,
	definesuccess	varchar(1500)	not null,
	other		text(1800),
	budget_TF		tinyint(1) default 0	not null,
	budgetnar_TF		tinyint(1) default 0	not null,
	workplan_TF		tinyint(1) default 0	not null,
	primary key (ideanum),
	foreign key (ideanum)		references	ideafirst(ideanum)  ON DELETE CASCADE
	);

Create table userproj (
	emailaddress	varchar(50)	not null,
	schoolname	varchar(35),
	cv		varchar(70),
	about		varchar(1500),
	primary key (emailaddress),
	foreign key (emailaddress)		references	user(emailaddress)
	);
create table userrole(
	emailaddress	varchar(50)	not null,
	rolecode	varchar(10)	not null,
	primary key 	(emailaddress, rolecode),
	foreign key (emailaddress)	references	user(emailaddress) ON DELETE CASCADE,
	foreign key (rolecode)		references	role(rolecode)
	);
create table projrole(
	projrolecode	varchar(3)	not null,
	projroledesc	varchar(28)	not null,
	primary key	(projrolecode)
	);
create table useridea(
	emailaddress	varchar(50)	not null,
	ideanum		int		not null,
	projrolecode	varchar(3)	not null,
	ideaupdate_TF	tinyint(1) default 0	not null,
	anticipated_contrib varchar(90)	not null,
	primary key	(emailaddress, ideanum),
	foreign key (emailaddress)	references	user(emailaddress) ON DELETE CASCADE,
	foreign key (ideanum)		references	ideafirst(ideanum)  ON DELETE CASCADE,
	foreign key (projrolecode)	references	projrole(projrolecode)
	);
create table userideatemp(
	emailaddress	varchar(50)	not null,
	ideanum		int		not null,
	projrolecode	varchar(3),
	ideaupdate_TF	tinyint(1) default 0	not null,
	anticipated_contrib varchar(90),
	primary key	(emailaddress, ideanum),
	foreign key (emailaddress)	references	user(emailaddress) ON DELETE CASCADE,
	foreign key (ideanum)		references	ideafirst(ideanum)  ON DELETE CASCADE,
	foreign key (projrolecode)	references	projrole(projrolecode)
	);
create table userideafinal(
	emailaddress	varchar(50)	not null,
	ideanum		int		not null,
	projrolecode	varchar(3)	not null,
	ideaupdate_TF	tinyint(1) default 0	not null,
	anticipated_contrib varchar(90)	not null,
	primary key	(emailaddress, ideanum),
	foreign key (emailaddress)	references	user(emailaddress) ON DELETE CASCADE,
	foreign key (ideanum)		references	ideafirst(ideanum)  ON DELETE CASCADE,
	foreign key (projrolecode)	references	projrole(projrolecode)
	);

Drop table if exists states;
Create table states (
	id	int			NOT NULL AUTO_INCREMENT,
	code	char(2)			NOT NULL DEFAULT '',
	name	varchar(128)		NOT NULL DEFAULT '',
	Primary key (id)
	) ENGINE=InnoDB AUTO_INCREMENT=60;

Drop table if exists webpage;
Create table webpage (
	PageName	varchar(35)	not null,
	Title		varchar(45)	not null,
	Primary key (PageName)
	);

Create table pagetext (
	PageName	varchar(35)	not null,
	ParaNr		int		not null,
	ParaText	varchar(4000)	not null,
	Primary key (PageName, ParaNr),
	Foreign key (pagename)	references	webpage(PageName)
	);

commit;
